apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: authentication-service-postgres
  name: authentication-service-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: authentication-service-postgres
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f ../docker-compose.yml
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        # io.kompose.network/backend-gobbler-net: "true"
        io.kompose.service: authentication-service-postgres
    spec:
      containers:
        - env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_PASSWORD
              # value: ${DATABASE_PASSWORD}
              valueFrom:
                secretKeyRef:
                  name: gobbler
                  key: DATABASE_PASSWORD
            - name: POSTGRES_USER
              # value: ${DATABASE_USER}
              valueFrom:
                secretKeyRef:
                  name: gobbler
                  key: DATABASE_USER
          image: asia-southeast1-docker.pkg.dev/${GCP_PROJECT_ID}/gobbler/authentication-service-postgres:latest
          livenessProbe:
            exec:
              command:
                - /usr/bin/pg_isready
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 5
          name: authentication-service-postgres
          ports:
            - containerPort: 5432
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: authentication-service-pgdata
      restartPolicy: Always
      volumes:
        - name: authentication-service-pgdata
          persistentVolumeClaim:
            claimName: authentication-service-pgdata
status: {}
